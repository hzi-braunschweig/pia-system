include:
  - local: ci/rules.yml
  - local: ci/k8s.yml

build-docker:
  extends:
    - .job-exclude-schedules-pipelines
    - .no-cpu-request
  stage: prepare
  image: snickch/buildx@sha256:71060c230c8c23e1525c89389ba18a4342a1923c29d7b76663ae41a6062c17b6
  # downloads may fail
  retry: 2
  variables:
    DOCKER_HOST: null
  before_script:
    - docker buildx create --name buildkitd --driver remote $BUILDKITD_ADDRESS
    - docker buildx use buildkitd
    - docker buildx install
  tags:
    - docker
  script:
    # generate the bake files
    - ./psa.utils.ci-create-bake-file/docker.sh > bake.hcl
    - ./psa.utils.ci-create-bake-file/docker-with-faked-secrets.sh > bake-with-faked-secrets.hcl
    # generate the secrets
    - docker build --build-arg AUTH_KEY_SIZE=2048 --build-arg CA_KEY_SIZE=2048 --build-arg SERVICE_KEY_SIZE=2048 --build-arg CA_VALIDITY_DAYS=36500 --build-arg SERVICE_VALIDITY_DAYS=36500 -o secrets psa.utils.scripts/generate-secrets/
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker buildx bake --push -f bake.hcl
    - docker buildx bake --push -f bake-with-faked-secrets.hcl
  rules:
    - if: $CI_SCHEDULED_TASK == "update_third_party_licenses"
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH =~ /^develop/
    - if: $CI_COMMIT_BRANCH =~ /^release/
    - if: $UNTAG_FAILED_RELEASE
  artifacts:
    paths:
      - secrets

push-branch-images:
  extends:
    - .job-exclude-schedules-pipelines
    - .job-exclude-update-third-party-licenses
    - .no-cpu-request
  stage: push
  image: quay.io/containers/skopeo:v1.10.0
  variables:
    GIT_STRATEGY: none
    DOCKER_HOST: null
  dependencies: []
  needs:
    - job: accumulate-coverage
  script:
    - sh -c "skopeo login -u '$CI_REGISTRY_USER' -p '$CI_REGISTRY_PASSWORD' '$CI_REGISTRY'"
    - >
      for JOB in $JOBS_DOCKER; do
        skopeo copy docker://$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$JOB:$IMAGE_ID docker://$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$JOB:$CI_COMMIT_REF_SLUG
      done
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH =~ /^develop/
    - if: $CI_COMMIT_BRANCH =~ /^release/
