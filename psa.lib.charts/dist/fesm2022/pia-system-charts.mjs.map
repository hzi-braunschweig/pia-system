{"version":3,"file":"pia-system-charts.mjs","sources":["../../projects/lib/src/lib/pia-charts-configuration.token.ts","../../projects/lib/src/lib/default-configuration.ts","../../projects/lib/src/lib/utilities/color-palette.utility.ts","../../projects/lib/src/lib/chart/chart.component.ts","../../projects/lib/src/lib/chart/chart.component.html","../../projects/lib/src/lib/services/date.service.ts","../../projects/lib/src/lib/feedback-statistic/feedback-statistic-bar-chart.component.ts","../../projects/lib/src/lib/feedback-statistic/feedback-statistic-bar-chart.component.html","../../projects/lib/src/lib/charts.module.ts","../../projects/lib/src/lib/utilities/data-faker.utility.ts","../../projects/lib/src/lib/utilities/feedback-statistic-mapper.utility.ts","../../projects/lib/src/lib/models/chart-feedback-statistic.ts","../../projects/lib/src/lib/models/charts-configuration.ts","../../projects/lib/src/lib/models/feedback-statistic-configuration.ts","../../projects/lib/src/lib/models/feedback-statistic-dto.ts","../../projects/lib/src/lib/models/relative-frequency-time-series-dto.ts","../../projects/lib/src/lib/models/time-range.ts","../../projects/lib/src/lib/models/time-span.ts","../../projects/lib/src/lib/models/index.ts","../../projects/lib/src/public-api.ts","../../projects/lib/src/pia-system-charts.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { ChartsConfiguration } from './models';\n\nexport const PIA_CHARTS_CONFIGURATION = new InjectionToken<ChartsConfiguration>(\n  'PIA_CHARTS_CONFIGURATION'\n);\n","/*\n * SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { ChartsConfiguration } from './models';\n\nexport const defaultConfiguration: ChartsConfiguration = {\n  legend: {\n    position: 'bottom',\n    align: 'center',\n  },\n  tooltip: {\n    enabled: false,\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nexport class ColorPaletteUtility {\n  public static readonly colors = [\n    '#668F31',\n    '#8FB744',\n    '#ADCF67',\n    '#CCE697',\n    '#2E90C1',\n    '#3AA9E0',\n    '#84C7E8',\n    '#A9DAF3',\n  ];\n\n  public static getColorForIterator(index: number): string {\n    return this.colors[index % this.colors.length];\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { ChartDataset } from 'chart.js';\nimport { Chart, ChartConfiguration, ChartType } from 'chart.js/auto';\nimport { PluginOptionsByType } from 'chart.js/dist/types';\nimport { ChartsConfiguration } from '../models';\nimport { PIA_CHARTS_CONFIGURATION } from '../pia-charts-configuration.token';\nimport { ColorPaletteUtility } from '../utilities/color-palette.utility';\n\n@Component({\n  selector: 'pia-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ChartComponent implements OnChanges, AfterViewInit {\n  @Input()\n  public config!: ChartConfiguration<ChartType>;\n  public chart: Chart<ChartType> | null = null;\n\n  @ViewChild('canvas', { read: ElementRef })\n  private readonly canvas: ElementRef | null = null;\n\n  public constructor(\n    @Inject(PIA_CHARTS_CONFIGURATION)\n    public globalConfig: ChartsConfiguration\n  ) {}\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (this.chart !== null) {\n      this.prepareChartConfiguration();\n      this.chart.data = this.config.data;\n      this.chart.update();\n    }\n  }\n\n  public ngAfterViewInit(): void {\n    this.prepareChartConfiguration();\n\n    this.chart = new Chart(this.canvas?.nativeElement, this.config);\n  }\n\n  private prepareChartConfiguration(): void {\n    this.applyColorsToDataSets();\n    this.applyPluginConfigurations();\n    this.applyResponsiveConfiguration();\n  }\n\n  private applyColorsToDataSets(): void {\n    if (this.config.data.datasets.length === 0) {\n      return;\n    }\n\n    let transformer: (\n      dataset: ChartDataset<ChartType>,\n      index: number\n    ) => ChartDataset<ChartType>;\n\n    switch (this.config.type) {\n      case 'bar':\n        transformer = (dataset, i) => {\n          dataset.backgroundColor = ColorPaletteUtility.getColorForIterator(i);\n          return dataset;\n        };\n        break;\n      case 'line':\n        transformer = (dataset, i) => {\n          dataset.borderColor = ColorPaletteUtility.getColorForIterator(i);\n          dataset.backgroundColor = dataset.borderColor;\n          return dataset;\n        };\n        break;\n      default:\n        throw new Error('Unsupported chart type: ' + this.config.type);\n    }\n\n    this.config.data.datasets = this.config.data.datasets.map(\n      (dataset, index) =>\n        // don't override colors\n        dataset.backgroundColor ? dataset : transformer(dataset, index)\n    );\n  }\n\n  private applyPluginConfigurations() {\n    if (this.globalConfig.legend) {\n      this.configurePlugin('legend', this.globalConfig.legend);\n    }\n\n    if (this.globalConfig.tooltip) {\n      this.configurePlugin('tooltip', this.globalConfig.tooltip);\n    }\n  }\n\n  private applyResponsiveConfiguration(): void {\n    this.config = {\n      ...this.config,\n      options: {\n        ...this.config.options,\n        maintainAspectRatio: false,\n      },\n    };\n  }\n\n  private configurePlugin(\n    key: keyof PluginOptionsByType<ChartType>,\n    pluginConfig: Partial<\n      PluginOptionsByType<ChartType>[keyof PluginOptionsByType<ChartType>]\n    >\n  ) {\n    this.config = {\n      ...this.config,\n      options: {\n        ...this.config.options,\n        plugins: {\n          ...(this.config.options?.plugins ? this.config.options.plugins : {}),\n          [key]: {\n            ...(typeof this.config.options?.plugins === 'object' &&\n            key in this.config.options.plugins\n              ? this.config.options.plugins[key]\n              : {}),\n            ...pluginConfig,\n          },\n        },\n      },\n    };\n  }\n}\n","<!--\n  ~ SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n  ~\n  ~ SPDX-License-Identifier: AGPL-3.0-or-later\n  -->\n\n<canvas #canvas></canvas>\n","/*\n * SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport {\n  differenceInDays,\n  differenceInMonths,\n  differenceInWeeks,\n  differenceInYears,\n  Duration,\n  format,\n  intervalToDuration,\n} from 'date-fns';\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({ providedIn: 'root' })\nexport class DateService {\n  constructor(private readonly translateService: TranslateService) {}\n\n  public getDuration(interval: Date[]): Duration {\n    const [start, end] = interval;\n    return intervalToDuration({ start, end });\n  }\n\n  /**\n   * Returns true if a duration is regular, e.g. if the duration is exactly 1 unit\n   */\n  public isDurationRegular(duration: Duration): boolean {\n    let isRegular =\n      Object.values(duration).filter((value) => value === 1).length === 1;\n\n    if (!isRegular) {\n      isRegular = duration.days === 7;\n    }\n\n    return isRegular;\n  }\n\n  public getLabelForInterval(\n    timeSeriesBeginning: Date,\n    interval: Date[]\n  ): string {\n    const [start, end] = interval;\n    const duration = this.getDuration(interval);\n    const isDurationRegular = this.isDurationRegular(duration);\n\n    if (duration.hours) {\n      return format(start, 'dd.MM.yyyy HH:mm') + ' - ' + format(end, 'HH:mm');\n    }\n\n    if (isDurationRegular) {\n      return this.getLabelForRegularInterval(\n        timeSeriesBeginning,\n        start,\n        duration\n      );\n    }\n    return this.getLabelForIrregularInterval(\n      timeSeriesBeginning,\n      start,\n      duration\n    );\n  }\n\n  private getLabelForRegularInterval(\n    timeSeriesBeginning: Date,\n    start: Date,\n    duration: Duration\n  ) {\n    const { months, days, years, hours } = duration;\n\n    if (hours) {\n      return format(start, 'dd.MM.yyyy HH:mm');\n    }\n\n    const index = this.getLastIndexForInterval(\n      timeSeriesBeginning,\n      start,\n      duration\n    );\n\n    if (months) {\n      return `${this.translateService.instant(\n        'CHARTS.FEEDBACK_STATISTIC.MONTH'\n      )} ${index}`;\n    }\n    if (days === 1) {\n      return `${this.translateService.instant(\n        'CHARTS.FEEDBACK_STATISTIC.DAY'\n      )} ${index}`;\n    }\n    if (days === 7) {\n      return `${this.translateService.instant(\n        'CHARTS.FEEDBACK_STATISTIC.WEEK'\n      )} ${index}`;\n    }\n    if (years) {\n      return `${this.translateService.instant(\n        'CHARTS.FEEDBACK_STATISTIC.YEAR'\n      )} ${index}`;\n    }\n    return '';\n  }\n\n  private getLabelForIrregularInterval(\n    timeSeriesBeginning: Date,\n    start: Date,\n    duration: Duration\n  ): string {\n    const { months, days, years } = duration;\n\n    const lastIndex = this.getLastIndexForInterval(\n      timeSeriesBeginning,\n      start,\n      duration\n    );\n\n    if (months) {\n      return `${this.translateService.instant(\n        'CHARTS.FEEDBACK_STATISTIC.MONTHS'\n      )} ${this.returnIndexRangeString(months, lastIndex)}`;\n    }\n    if (days) {\n      if (days % 7 === 0) {\n        return `${this.translateService.instant(\n          'CHARTS.FEEDBACK_STATISTIC.WEEKS'\n        )} ${this.returnIndexRangeString(days / 7, lastIndex)}`;\n      }\n      return `${this.translateService.instant(\n        'CHARTS.FEEDBACK_STATISTIC.DAYS'\n      )} ${this.returnIndexRangeString(days, lastIndex)}`;\n    }\n    if (years) {\n      return `${this.translateService.instant(\n        'CHARTS.FEEDBACK_STATISTIC.YEARS'\n      )} ${this.returnIndexRangeString(years, lastIndex)}`;\n    }\n    return '';\n  }\n\n  private returnIndexRangeString(duration: number, lastIndex: number): string {\n    return `${lastIndex + 1 - duration}-${lastIndex}`;\n  }\n\n  private getLastIndexForInterval(\n    timeSeriesBeginning: Date,\n    start: Date,\n    duration: Duration\n  ): number {\n    const { months, days, years } = duration;\n    if (years) {\n      return differenceInYears(start, timeSeriesBeginning) + years;\n    }\n\n    if (months) {\n      return differenceInMonths(start, timeSeriesBeginning) + months;\n    }\n\n    if (days) {\n      if (days % 7 === 0) {\n        return differenceInWeeks(start, timeSeriesBeginning) + days / 7;\n      }\n      return differenceInDays(start, timeSeriesBeginning) + days;\n    }\n\n    throw new Error(`Unsupported duration: ${JSON.stringify(duration)}`);\n  }\n\n  public isIntervalWithDateObjects(\n    p: any\n  ): p is Interval & { start: Date; end: Date } {\n    return p && p.start instanceof Date && p.end instanceof Date;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n} from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ChartDataset, Ticks } from 'chart.js';\nimport { ChartConfiguration } from 'chart.js/auto';\nimport { intlFormat } from 'date-fns';\nimport { ChartFeedbackStatistic } from '../models';\nimport { DateService } from '../services/date.service';\n\n@Component({\n  selector: 'pia-feedback-statistic-bar-chart',\n  templateUrl: './feedback-statistic-bar-chart.component.html',\n  styleUrls: ['./feedback-statistic-bar-chart.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FeedbackStatisticBarChartComponent implements OnChanges, OnInit {\n  @Input() public feedbackStatistic: ChartFeedbackStatistic | null = null;\n  @Input() public interval: Interval | null = null;\n\n  public config: ChartConfiguration<'bar'> = this.returnBaseChartConfig();\n\n  private labels: string[] = [];\n  private dataset: ChartDataset<'bar'>[] = [];\n  private datasetIndexRange: number[] = [];\n\n  public constructor(\n    private readonly dateService: DateService,\n    private readonly translationService: TranslateService\n  ) {}\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes['feedbackStatistic'] || changes['interval']) {\n      this.config = this.returnBaseChartConfig();\n      this.updateConfig();\n    }\n  }\n\n  public ngOnInit(): void {\n    this.updateConfig();\n  }\n\n  private updateConfig(): void {\n    this.setLabels();\n    this.setDataset();\n\n    this.config = {\n      ...this.config,\n      data: {\n        labels: this.labels,\n        datasets: this.dataset,\n      },\n    };\n  }\n\n  private setLabels() {\n    this.labels = this.renderLabels();\n  }\n\n  private setDataset() {\n    this.dataset = this.renderDatasets();\n  }\n\n  private renderLabels(): string[] {\n    if (!this.feedbackStatistic?.intervals.length) {\n      return [];\n    }\n\n    const timeSeriesBeginning = this.feedbackStatistic.intervals[0][0];\n    let intervals: Date[][] = [...this.feedbackStatistic.intervals];\n\n    if (this.dateService.isIntervalWithDateObjects(this.interval)) {\n      const { start, end } = this.interval;\n\n      intervals = intervals.filter((i) => i[0] >= start && i[1] <= end);\n\n      this.datasetIndexRange = [\n        this.feedbackStatistic.intervals.indexOf(intervals[0]),\n        this.feedbackStatistic.intervals.indexOf(\n          intervals[intervals.length - 1]\n        ),\n      ];\n    }\n\n    return intervals.map((interval, index) =>\n      this.dateService.getLabelForInterval(timeSeriesBeginning, interval)\n    );\n  }\n\n  private renderDatasets(): ChartDataset<'bar'>[] {\n    if (!this.feedbackStatistic?.series.length) {\n      return [];\n    }\n\n    return this.feedbackStatistic.series.map((series) => {\n      return {\n        label: series.label,\n        backgroundColor: series.color ?? undefined,\n        data: this.datasetIndexRange.length\n          ? series.data.slice(\n              this.datasetIndexRange[0],\n              this.datasetIndexRange[1] + 1\n            )\n          : series.data,\n      };\n    });\n  }\n\n  private formatDate(date: Date): string {\n    return intlFormat(date, {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n    });\n  }\n\n  private returnBaseChartConfig(): ChartConfiguration<'bar'> {\n    return {\n      type: 'bar',\n      data: {\n        datasets: [],\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true,\n            min: 0,\n            max: 100,\n            title: {\n              display: true,\n              text: this.translationService.instant(\n                'CHARTS.FEEDBACK_STATISTIC.RELATIVE_FREQUENCY'\n              ),\n            },\n            ticks: {\n              display: true,\n              autoSkip: false,\n              maxTicksLimit: 20,\n              // Only render first and last tick with percentage sign\n              callback(value, index, ticks) {\n                if (index === 0 || index === ticks.length - 1) {\n                  value = Ticks.formatters.numeric.apply(this, [\n                    +value,\n                    index,\n                    ticks,\n                  ]);\n                  return `${value}%`;\n                }\n\n                return '';\n              },\n            },\n          },\n          x: {\n            offset: true,\n            title: {\n              display: true,\n              text: '',\n            },\n          },\n        },\n      },\n    };\n  }\n}\n","<!--\n  ~ SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n  ~\n  ~ SPDX-License-Identifier: AGPL-3.0-or-later\n  -->\n\n<pia-chart [config]=\"config\"></pia-chart>\n","/*\n * SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { PIA_CHARTS_CONFIGURATION } from './pia-charts-configuration.token';\nimport { defaultConfiguration } from './default-configuration';\nimport { ChartComponent } from './chart/chart.component';\nimport { FeedbackStatisticBarChartComponent } from './feedback-statistic/feedback-statistic-bar-chart.component';\nimport { ChartsConfiguration } from './models';\n\n@NgModule({\n  declarations: [ChartComponent, FeedbackStatisticBarChartComponent],\n  imports: [TranslateModule],\n  exports: [ChartComponent, FeedbackStatisticBarChartComponent],\n})\nexport class ChartsModule {\n  static forRoot(\n    config?: ChartsConfiguration\n  ): ModuleWithProviders<ChartsModule> {\n    return this.buildModuleWithProviders(config);\n  }\n\n  static forChild(\n    config?: ChartsConfiguration\n  ): ModuleWithProviders<ChartsModule> {\n    return this.buildModuleWithProviders(config);\n  }\n\n  public static buildModuleWithProviders(\n    config?: ChartsConfiguration\n  ): ModuleWithProviders<ChartsModule> {\n    return {\n      ngModule: ChartsModule,\n      providers: [\n        {\n          provide: PIA_CHARTS_CONFIGURATION,\n          useValue: config ?? defaultConfiguration,\n        },\n      ],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { add } from 'date-fns';\nimport { ChartFeedbackStatistic } from '../models';\nimport { ColorPaletteUtility } from './color-palette.utility';\n\nexport class DataFakerUtility {\n  /**\n   * Generate an array of random numbers, ranging from 0 to 100\n   */\n  public static generateRandomNumberArray(length: number): number[] {\n    const result = [];\n    for (let i = 0; i < length; i++) {\n      result.push(Math.random() * 100);\n    }\n    return result;\n  }\n\n  public static generateFeedbackStatistic(\n    start: Date,\n    end: Date,\n    duration: Duration,\n    labels: string[]\n  ): ChartFeedbackStatistic {\n    const intervals: [Date, Date][] = [];\n\n    for (let date = start; date <= end; date = add(date, duration)) {\n      intervals.push([date, add(date, duration)]);\n    }\n    intervals.pop();\n\n    const series = labels.map((label, i) => ({\n      label,\n      color: ColorPaletteUtility.getColorForIterator(i),\n      data: this.generateRandomNumberArray(intervals.length),\n    }));\n\n    return {\n      intervals,\n      series,\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport {\n  ChartFeedbackSeries,\n  ChartFeedbackStatistic,\n  FeedbackStatisticDto,\n} from '../models';\n\nexport class FeedbackStatisticMapperUtility {\n  public static map(dto: FeedbackStatisticDto): ChartFeedbackStatistic | null {\n    if (!dto || !dto.data || dto.data.length === 0) {\n      return null;\n    }\n\n    const intervals = dto.data[0].intervals.map((interval) => [\n      new Date(interval.timeRange.startDate ?? 0),\n      new Date(interval.timeRange.endDate ?? 0),\n    ]);\n\n    const series: ChartFeedbackSeries[] = dto.data.map((data) => {\n      return {\n        label: data.label,\n        color: data.color,\n        data: data.intervals.map((interval) => interval.value),\n      };\n    });\n\n    return {\n      intervals,\n      series,\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nexport interface ChartFeedbackSeries {\n  label: string;\n  color: string;\n  data: number[];\n}\n\nexport interface ChartFeedbackStatistic {\n  intervals: Date[][];\n  series: ChartFeedbackSeries[];\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { PluginOptionsByType } from 'chart.js';\nimport { ChartType } from 'chart.js/auto';\n\nexport interface ChartsConfiguration {\n  colors?: string[];\n  legend?: Partial<PluginOptionsByType<ChartType>['legend']>;\n  tooltip?: Partial<PluginOptionsByType<ChartType>['tooltip']>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { TimeSpanDto } from './time-span';\nimport { TimeRangeDto } from './time-range';\n\nexport type FeedbackStatisticVisibility =\n  | 'hidden'\n  | 'testprobands'\n  | 'allaudiences';\n\nexport type FeedbackStatisticConfigurationDto =\n  RelativeFrequencyTimeSeriesConfigurationDto; // may be extended later\n\ninterface FeedbackStatisticConfigurationMetaDataDto {\n  id: number;\n  study: string;\n  visibility: FeedbackStatisticVisibility;\n  title: string;\n  description: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface RelativeFrequencyTimeSeriesConfigurationDto\n  extends FeedbackStatisticConfigurationMetaDataDto {\n  type: 'relative_frequency_time_series';\n  comparativeValues: {\n    questionnaire: QuestionnaireReferenceDto;\n    answerOptionValueCodes: AnswerOptionValueCodesReferenceDto;\n  };\n  timeSeries: FeedbackStatisticTimeSeriesDto[];\n  intervalShift: TimeSpanDto;\n  timeRange: TimeRangeDto;\n}\n\nexport interface FeedbackStatisticTimeSeriesDto {\n  color: string; // hex code\n  label: string;\n  questionnaire: QuestionnaireReferenceDto;\n  answerOptionValueCodes: AnswerOptionValueCodesReferenceDto;\n}\n\nexport interface QuestionnaireReferenceDto {\n  id: number;\n  version: number;\n}\n\nexport interface AnswerOptionValueCodesReferenceDto {\n  id: number;\n  variableName: string | null;\n  valueCodes: number[];\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { FeedbackStatisticConfigurationDto } from './feedback-statistic-configuration';\nimport {\n  RelativeFrequencyTimeSeriesDataDto,\n  RelativeFrequencyTimeSeriesDto,\n} from './relative-frequency-time-series-dto';\n\nexport type FeedbackStatisticStatus =\n  | 'has_data'\n  | 'pending'\n  | 'insufficient_data'\n  | 'error';\n\nexport type FeedbackStatisticDto = RelativeFrequencyTimeSeriesDto; // may be extended in the future\n\nexport type FeedbackStatisticTypeDto =\n  FeedbackStatisticConfigurationDto['type'];\n\nexport type FeedbackStatisticDataDto = RelativeFrequencyTimeSeriesDataDto[]; // may be extended in the future\n\nexport interface FeedbackStatisticMetaDataDto {\n  configurationId: number;\n  title: string;\n  description: string;\n  status: FeedbackStatisticStatus;\n  updatedAt: string | null;\n  type: FeedbackStatisticTypeDto;\n  data: FeedbackStatisticDataDto | null;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { FeedbackStatisticMetaDataDto } from './feedback-statistic-dto';\nimport { TimeRangeDto } from './time-range';\n\nexport interface RelativeFrequencyTimeSeriesDto\n  extends FeedbackStatisticMetaDataDto {\n  type: 'relative_frequency_time_series';\n  data: RelativeFrequencyTimeSeriesDataDto[] | null;\n}\n\nexport interface RelativeFrequencyTimeSeriesDataDto {\n  color: string;\n  label: string;\n  intervals: TimeSeriesIntervalDataDto[];\n}\n\nexport interface TimeSeriesIntervalDataDto {\n  timeRange: TimeRangeDto;\n  value: number;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nexport interface TimeRangeDto {\n  startDate: string; // ISO date string\n  endDate: string | null; // ISO date string, null = now\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nexport type TimeSpanUnit = 'hour' | 'day' | 'week' | 'month';\n\nexport interface TimeSpanDto {\n  amount: number;\n  unit: TimeSpanUnit;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nexport * from './chart-feedback-statistic';\nexport * from './charts-configuration';\nexport * from './feedback-statistic-configuration';\nexport * from './feedback-statistic-dto';\nexport * from './relative-frequency-time-series-dto';\nexport * from './time-range';\nexport * from './time-span';\n","/*\n * SPDX-FileCopyrightText: 2023 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI) <PiaPost@helmholtz-hzi.de>\n *\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nexport * from './lib/charts.module';\nexport * from './lib/chart/chart.component';\nexport * from './lib/feedback-statistic/feedback-statistic-bar-chart.component';\nexport * from './lib/utilities/data-faker.utility';\nexport * from './lib/utilities/color-palette.utility';\nexport * from './lib/utilities/feedback-statistic-mapper.utility';\nexport * from './lib/models';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.DateService","i2","i3.ChartComponent"],"mappings":"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"}