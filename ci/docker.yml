include:
  - local: ci/rules.yml
  - local: ci/k8s.yml

build-docker:
  extends:
    - .job-exclude-schedules-pipelines
    - .no-cpu-request
  stage: prepare
  image: snickch/buildx@sha256:63db62815b7ec00b80fd28c5f85c88c50df48d65fbbdd454e18b0efcc96a3235
  # downloads may fail
  retry: 2
  variables:
    DOCKER_HOST: null
  before_script:
    - docker buildx create --name buildkitd --driver remote $BUILDKITD_ADDRESS
    - docker buildx use buildkitd
    - docker buildx install
  tags:
    - docker
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - export TAG=$IMAGE_ID
    - export IMAGE_REGISTRY=$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
    - export VERSION_INFO_PIPELINE_ID=$CI_PIPELINE_ID
    - export VERSION_INFO_GIT_HASH=CI_COMMIT_SHA
    - export VERSION_INFO_GIT_REF=$CI_COMMIT_REF_SLUG
    - docker buildx bake --push -f bake.hcl
  rules:
    - if: $CI_SCHEDULED_TASK == "cleanup-registry"
    - if: $CI_SCHEDULED_TASK == "update_third_party_licenses"
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH =~ /^develop/
    - if: $CI_COMMIT_BRANCH =~ /^release/
    - if: $UNTAG_FAILED_RELEASE

push-branch-images:
  extends:
    - .job-exclude-schedules-pipelines
    - .no-cpu-request
  stage: push
  image:
    name: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/psa.utils.ci-release-image:$IMAGE_ID
    entrypoint: ['']
  variables:
    GIT_STRATEGY: none
    DOCKER_HOST: null
  dependencies: []
  needs:
    - job: accumulate-coverage
  script:
    - sh -c "skopeo login -u '$CI_REGISTRY_USER' -p '$CI_REGISTRY_PASSWORD' '$CI_REGISTRY'"
    - >
      for JOB in $JOBS_DOCKER; do
        skopeo copy docker://$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$JOB:$IMAGE_ID docker://$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$JOB:$CI_COMMIT_REF_SLUG
      done
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH =~ /^develop/
    - if: $CI_COMMIT_BRANCH =~ /^release/
