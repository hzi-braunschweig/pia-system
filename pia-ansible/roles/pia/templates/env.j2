# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# NEVER SET THIS ON ANY SYSTEM THAT COULD CONTAIN SENSITIVE DATA
# this will allow the deployment service to run, so that the database
# can be exported and imported
IS_DEVELOPMENT_SYSTEM={{ pia_is_development_system |lower }}
{% if pia_is_qpia %}
ENABLE_DB_EXPORT={{ hostvars[inventory_hostname]['PIA_ENABLE_DB_EXPORT'] | default(pia_enable_db_export) }}
ENABLE_DB_IMPORT={{ hostvars[inventory_hostname]['PIA_ENABLE_DB_IMPORT'] | default(pia_enable_db_import) }}
DEPLOYMENT_USER={{ hostvars[inventory_hostname]['PIA_DEPLOYMENT_USER'] | default(pia_deployment_user) }}
DEPLOYMENT_PASSWORD={{ hostvars[inventory_hostname]['PIA_DEPLOYMENT_PASSWORD'] | default(pia_deployment_password) }}
{% endif %}
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

####################################################################################
# common
####################################################################################

PIA_DOCKER_TAG={{ pia_docker_tag }}
PIA_DOCKER_REGISTRY={{ pia_docker_registry }}

SSL_DIRECTORY={{ pia_ssl_directory }}
SSH_KEY_DIRECTORY={{ pia_ssh_key_directory }}
FIREBASE_DIRECTORY={{ pia_firebase_directory }}

QPIA_DATA_DIRECTORY={{ pia_qpia_data_directory }}
EWPIA_DATA_DIRECTORY={{ pia_ewpia_data_directory }}
IPIA_DATA_DIRECTORY={{ pia_ipia_data_directory }}

MESSAGEQUEUE_DATA_DIRECTORY={{ pia_messagequeue_data_directory }}

# Workarround for slow startup due to loki
COMPOSE_HTTP_TIMEOUT=300

# comma separated list of hosts that are whitelisted for metric scraping. e.g.: 1.0.0.1,8.8.8.8
METRICS_IP_WHITELIST=*

DEPLOY_MODE=DEBUG

# true for systems with sormas; false otherwise
IS_SORMAS_ACTIVE={{ hostvars[inventory_hostname]['PIA_IS_SORMAS_ACTIVE'] | default(pia_has_sormas) }}

# the default language, unless another language is explicitly set
DEFAULT_LANGUAGE={{ hostvars[inventory_hostname]['PIA_DEFAULT_LANGUAGE'] | default(pia_default_language) }}


# this is used for the apigateway to service communication
PROTOCOL=https

# this is used for the service to service communication
INTERNAL_PROTOCOL=http

# this is used for the communication to pia via the internet
EXTERNAL_PROTOCOL={{ pia_external_protocol }}
EXTERNAL_HOST={{ hostvars[inventory_hostname]['PIA_API_ADDRESS'] | default(pia_url) }}
EXTERNAL_PORT={{ pia_external_port }}

# The public url of the pia instance
{% if pia_external_protocol == 'https' and pia_external_port == 443 %}
WEBAPP_URL=https://{{ hostvars[inventory_hostname]['PIA_API_ADDRESS'] | default(pia_url) }}
{% elif pia_external_protocol == 'http' and pia_external_port == 80 %}
WEBAPP_URL=http://{{ hostvars[inventory_hostname]['PIA_API_ADDRESS'] | default(pia_url) }}
{% else %}
WEBAPP_URL={{ pia_external_protocol }}://{{ hostvars[inventory_hostname]['PIA_API_ADDRESS'] | default(pia_url) }}:{{ pia_external_port }}
{% endif %}

MESSAGEQUEUE_ADMIN_USER=admin
MESSAGEQUEUE_ADMIN_PASSWORD={{ pia_messagequeue_admin_password }}

MESSAGEQUEUE_APP_USER=app
MESSAGEQUEUE_APP_PASSWORD={{ pia_messagequeue_app_password }}

# Service Hosts
# these are the names that can be used to reach the services internally.

{% for service in pia_services %}
{%   if service.variableName is defined %}
{{ service.variableName }}_HOST={{ service.fullName }}
{%     if (pia_is_qpia and service.qpia) or (pia_is_ewpia and service.ewpia) or (pia_is_ipia and service.ipia) %}
#{{ service.variableName }}_HOST={{ service.fullName }}
{%       if service.portOffset is defined %}
{{ service.variableName }}_PORT=4000
{{ service.variableName }}_INTERNAL_PORT=5000
{{ service.variableName }}_PORT_EXPOSED={{ service.portOffset + 4000 }}
{{ service.variableName }}_INTERNAL_PORT_EXPOSED={{ service.portOffset + 5000 }}
{%       else %}
{{ service.variableName }}_PORT={{ service.port }}
{%       endif %}
{%     else %}
{%       if service.qpia %}
#{{ service.variableName }}_HOST={{ pia_qpia_ip }}
{%       endif %}
{%       if service.ewpia %}
#{{ service.variableName }}_HOST={{ pia_ewpia_ip }}
{%       endif %}
{%       if service.ipia %}
#{{ service.variableName }}_HOST={{ pia_ipia_ip }}
{%       endif %}
{%       if service.portOffset is defined %}
{{ service.variableName }}_PORT={{ service.portOffset + 4000 }}
{{ service.variableName }}_INTERNAL_PORT={{ service.portOffset + 5000 }}
{%       else %}
{{ service.variableName }}_PORT={{ service.port }}
{%       endif %}
{%     endif %}
{%   endif %}
{% endfor %}

WEBAPPSERVER_HTTP_PORT=12345
WEBAPPSERVER_HTTPS_PORT=12346

{% if pia_is_ewpia or pia_is_qpia %}
# When the architecture is adjusted so that only ewpia host needs to access the ewpiadb,
# the pia_is_qpia condition has to be removed.
####################################################################################
# ewpia + qpia
####################################################################################
# use a complex password on productive systems!
EWPIA_USER=superuser
EWPIA_PASSWORD={{ pia_ewpia_password }}
EWPIA_DB=pia_database
{% endif %}

{% if pia_is_ipia or pia_is_qpia %}
# When the architecture is adjusted so that only ipia host needs to access the ipiadb,
# the pia_is_qpia condition has to be removed.
####################################################################################
# ipia + qpia
####################################################################################
# use a complex password on productive systems!
IPIA_USER=superuser
IPIA_PASSWORD={{ pia_ipia_password }}
IPIA_DB=pia_database

DB_PERSONALDATA_USER=personaldataservice
DB_PERSONALDATA_PASSWORD={{ pia_db_personaldata_password }}
DB_PERSONALDATA_DB=pia_database

AUTHSERVER_MESSAGEQUEUE_EXCHANGE={{ pia_authserver_messagequeue_exchange }}
AUTHSERVER_ADMIN_TOKEN_INTROSPECTION_CLIENT_SECRET={{ pia_authserver_admin_token_introspection_client_secret }}
AUTHSERVER_PROBAND_TOKEN_INTROSPECTION_CLIENT_SECRET={{ pia_authserver_proband_token_introspection_client_secret }}
AUTHSERVER_PROBAND_MANAGEMENT_CLIENT_SECRET={{ pia_authserver_proband_management_client_secret }}
AUTHSERVER_ADMIN_MANAGEMENT_CLIENT_SECRET={{ pia_authserver_admin_management_client_secret }}

# the length of generated passwords (must be at least 10)
USER_PASSWORD_LENGTH={{ pia_user_password_length }}

# email settings
{% if pia_local_development %}
#we want to use mailhog on local development systems
MAIL_HOST=mailserver
MAIL_PORT=1025
MAIL_REQUIRE_TLS=false
{% else %}
MAIL_HOST={{ hostvars[inventory_hostname]['PIA_MAIL_HOST'] | default(pia_mail_host) }}
MAIL_PORT={{ hostvars[inventory_hostname]['PIA_MAIL_PORT'] | default(pia_mail_port) }}
MAIL_REQUIRE_TLS={{ hostvars[inventory_hostname]['PIA_MAIL_REQUIRE_TLS'] | default(pia_mail_require_tls) |lower }}
{% endif %}
MAIL_USER={{ hostvars[inventory_hostname]['PIA_MAIL_USER'] | default(pia_mail_user) }}
MAIL_PASSWORD={{ hostvars[inventory_hostname]['PIA_MAIL_PASSWORD'] | default(pia_mail_password) }}
MAIL_FROM_ADDRESS={{ hostvars[inventory_hostname]['PIA_MAIL_FROM_ADDRESS'] | default(pia_mail_from_address) }}
MAIL_FROM_NAME={{ hostvars[inventory_hostname]['PIA_MAIL_FROM_NAME'] | default(pia_mail_from_name) }}

{% endif %}

{% if pia_is_qpia %}
####################################################################################
# qpia
####################################################################################

# use a complex password on productive systems!
QPIA_USER=superuser
QPIA_PASSWORD={{ pia_qpia_password }}
QPIA_DB=pia_database

DB_LOG_USER=loggingservice
DB_LOG_PASSWORD={{ pia_db_log_password }}
DB_LOG_DB=pia_database
DB_LOG_HOST=databaseservice
DB_LOG_PORT=5432

DB_SORMAS_USER=sormasservice
DB_SORMAS_PASSWORD={{ pia_db_sormas_password }}
DB_SORMAS_DB=pia_database
DB_SORMAS_HOST=databaseservice
DB_SORMAS_PORT=5432

# use localhost and random passwords if not used
MHH_FTPSERVICE_HOST={{ hostvars[inventory_hostname]['PIA_MHH_FTPSERVICE_HOST'] | default(pia_mhh_ftpservice_host) }}
MHH_FTPSERVICE_PORT={{ hostvars[inventory_hostname]['PIA_MHH_FTPSERVICE_PORT'] | default(pia_mhh_ftpservice_port) }}
MHH_FTPSERVICE_USER={{ hostvars[inventory_hostname]['PIA_MHH_FTPSERVICE_USER'] | default(pia_mhh_ftpservice_user) }}
MHH_FTPSERVICE_PW={{ hostvars[inventory_hostname]['PIA_MHH_FTPSERVICE_PW'] | default(pia_mhh_ftpservice_password) }}
MHH_FTPSERVICE_ALLOW_OLD_SSH2_KEX={{ hostvars[inventory_hostname]['PIA_MHH_FTPSERVICE_ALLOW_OLD_SSH2_KEX'] | default(pia_mhh_ftpservice_allow_old_ssh2_kex) }}

# use localhost and random passwords if not used
HZI_FTPSERVICE_HOST={{ hostvars[inventory_hostname]['PIA_HZI_FTPSERVICE_HOST'] | default(pia_hzi_ftpservice_host) }}
HZI_FTPSERVICE_PORT={{ hostvars[inventory_hostname]['PIA_HZI_FTPSERVICE_PORT'] | default(pia_hzi_ftpservice_port) }}
HZI_FTPSERVICE_USER={{ hostvars[inventory_hostname]['PIA_HZI_FTPSERVICE_USER'] | default(pia_hzi_ftpservice_user) }}
HZI_FTPSERVICE_PW={{ hostvars[inventory_hostname]['PIA_HZI_FTPSERVICE_PASSWORD'] | default(pia_hzi_ftpservice_password) }}
HZI_FTPSERVICE_ALLOW_OLD_SSH2_KEX={{ hostvars[inventory_hostname]['PIA_HZI_FTPSERVICE_ALLOW_OLD_SSH2_KEX'] | default(pia_hzi_ftpservice_allow_old_ssh2_kex) }}

{% if pia_has_sormas or (hostvars[inventory_hostname]['PIA_IS_SORMAS_ACTIVE'] is defined and hostvars[inventory_hostname]['PIA_IS_SORMAS_ACTIVE'] != 'False') %}
# required if a sormasservice is deployed:

# the address of the sormas server that pia will contact
SORMAS_SERVER_URL={{ hostvars[inventory_hostname]['PIA_SORMAS_SERVER_URL'] | default(sormas_url) }}

# the username that sormas is using to access pia; only relevant for systems with pia.
SORMAS_ON_PIA_USER={{ hostvars[inventory_hostname]['PIA_SORMAS_ON_PIA_USER'] | default(pia_sormas_on_pia_user) }}
# the password that sormas is using to access pia; only relevant for systems with pia. Use a complex unique password on productive systems!
SORMAS_ON_PIA_PASSWORD={{ hostvars[inventory_hostname]['PIA_SORMAS_ON_PIA_PASSWORD'] | default(pia_sormas_on_pia_password) }}
# validity of the token that sormas is using to access pia; should be synchronized with sormas symptomdiary token caching duration.
SORMAS_ON_PIA_TOKEN_VALIDITY_TIMEOUT={{ hostvars[inventory_hostname]['SORMAS_ON_PIA_TOKEN_VALIDITY_TIMEOUT'] | default(pia_sormas_on_pia_token_validity_timeout) }}

# the username that pia will use to access sormas
PIA_ON_SORMAS_USER={{ hostvars[inventory_hostname]['PIA_PIA_ON_SORMAS_USER'] | default(pia_pia_on_sormas_user) }}
# the password that pia will use to access sormas
PIA_ON_SORMAS_PASSWORD={{ hostvars[inventory_hostname]['PIA_PIA_ON_SORMAS_PASSWORD'] | default(pia_pia_on_sormas_password) }}

# the study in PIA that will be used to register new participants send from sormas
SORMAS_STUDY={{ hostvars[inventory_hostname]['PIA_SORMAS_STUDY'] | default(pia_sormas_study) }}
{% endif %}

# Metrics are accessible only via single port (docker-compose configurable, default 9000)
METRICS_EXTERNAL_PROTOCOL=https


# The X-frame-options Header that should be set
# https://developer.mozilla.org/de/docs/Web/HTTP/Headers/X-Frame-Options
# SORMAS has to be allowed on productive systems
# ALLOW-FROM is deprecated and doesn't support multiple domains!
# So using CSP is probably prefered
# X-Frame-Options could be specified for older browsers when
# sameorigin is a valid solution.
X_FRAME_OPTIONS={{ pia_x_frame_options }}

# The Content-Security-Policy Header that sould be set
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
# SORMAS has to be allowed on productive systems
# Example:
# CONTENT_SECURITY_POLICY="frame-ancestors edc.hgw.nationale-kohorte.de edc-hd.nationale-kohorte.de 'self';"
# CONTENT_SECURITY_POLICY="frame-ancestors 'none';"
# CONTENT_SECURITY_POLICY="frame-ancestors 'self';"
CONTENT_SECURITY_POLICY={{ pia_content_security_policy }}
{% endif %}


{% if pia_is_ipia %}
####################################################################################
# ipia
####################################################################################

DB_AUTHSERVER_HOST=ipiaservice
DB_AUTHSERVER_PORT=5432
DB_AUTHSERVER_USER=authserver
DB_AUTHSERVER_PASSWORD={{ pia_db_authserver_password }}
DB_AUTHSERVER_DB=pia_database

AUTHSERVER_ADMIN_PASSWORD={{ pia_authserver_admin_password }}

# sets directAccessGrantsEnabled for admin realm
IS_DIRECT_ACCESS_GRANT_ENABLED={{ pia_is_direct_access_grant_enabled |lower }}

# this is the base url of the modys REST API
MODYS_BASE_URL={{ hostvars[inventory_hostname]['PIA_MODYS_BASE_URL'] | default(pia_modys_base_url) }}
# this is the username that pia will use to access modys
MODYS_USERNAME={{ hostvars[inventory_hostname]['PIA_MODYS_USERNAME'] | default(pia_modys_username) }}
# this is the password that pia will use to access modys
MODYS_PASSWORD={{ hostvars[inventory_hostname]['PIA_MODYS_PASSWORD'] | default(pia_modys_password) }}
# this is the study for whose probands the personaldata should be imported
MODYS_STUDY={{ hostvars[inventory_hostname]['PIA_MODYS_STUDY'] | default(pia_modys_study) }}
# this is the identifier type ID that indicates which typeID by which a pseudonym can be found in modys
MODYS_IDENTIFIER_TYPE_ID={{ hostvars[inventory_hostname]['PIA_MODYS_IDENTIFIER_TYPE_ID'] | default(pia_modys_identifier_type_id) }}
# this is a controlling number for the concurrency of requests to modys. It sets the size of the buffer of the two streams.
MODYS_REQUEST_CONCURRENCY={{ hostvars[inventory_hostname]['PIA_MODYS_REQUEST_CONCURRENCY'] | default(pia_modys_request_concurrency) }}

{% endif %}

####################################################################################
# Metrics
####################################################################################
{% if pia_is_qpia %}
METRICS_ENABLED_FOR=qpia
{% elif pia_is_ipia %}
METRICS_ENABLED_FOR=ipia
{% elif pia_is_ewpia %}
METRICS_ENABLED_FOR=ewpia
{% else %}
METRICS_ENABLED_FOR=all
{% endif %}
